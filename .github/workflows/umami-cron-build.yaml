#   ____ _                 _   _____     _        _
#  / ___| | ___  _   _  __| | | ____|___| |_ __ _| |_ ___
# | |   | |/ _ \| | | |/ _` | |  _| / __| __/ _` | __/ _ \
# | |___| | (_) | |_| | (_| | | |___\__ \ || (_| | ||  __/
#  \____|_|\___/ \__,_|\__,_| |_____|___/\__\__,_|\__\___
#
# https://github.com/TechProber/cloud-estate
#
# Copyright (C) 2021 TechProber <https://github.com/TechProber>
#
# This is a open-source software, liscensed under the MIT License.
# See /License for more information.

name: Umami Container Daily Cron Build CI

on:
  schedule:
    # Runs at 00:00 everyday
    - cron: "0 0 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  multi-arch-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          repository: mikecao/umami
          path: umami

        # Get current tag version and pass it as environment variable
      - name: Set environment variable
        run: |
          echo "IMAGE_NAME=umami" >> $GITHUB_ENV
          echo "TAG_NAME=latest" >> $GITHUB_ENV
          echo "REGISTRY_NAME=ghcr.io" >> $GITHUB_ENV
          echo "GHCR_USERNAME=techprober" >> $GITHUB_ENV

      # The docker/setup-qemu action installs QEMU static binaries, which are used to run builders for architectures other than the host.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      # The docker/setup-buildx action configures buildx, which is a Docker CLI plugin that provides enhanced build capabilities.
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_NAME }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      # Build and Push the images
      - name: Build and Push Image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64
          context: umami
          build-args: |
            DATABASE_TYPE=mysql
          push: true
          tags: |
            ${{ env.REGISTRY_NAME }}/${{ env.GHCR_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}
